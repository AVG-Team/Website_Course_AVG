@model Website_Course_AVG.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<style>
    input {
        max-width: none;
        max-height: none;
    }
</style>
<main aria-labelledby="title">
    <div class="container d-inline min-vh-100">
        <div class="row">
            <div class="rounded d-flex justify-content-center">
                <div class="col-md-6 col-sm-12 shadow-lg p-5 bg-light rounded-2">
                    <div>
                        <div class="text-center">
                            <h3 class="text-primary">Create Account</h3>
                        </div>
                    </div>
                    @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="p-4">
                            @Html.ValidationSummary(true, "" , new { @class = "text-danger" })
                            <div class="input-group mb-3">
                                <span class="input-group-text bg-primary rounded-start"><i class="fa-solid fa-user " style="width: 15px; color:white; "></i></span>
                                @Html.TextBoxFor(m => m.userName, new { @class = "form-control form-control-lg bg-light fs-6  rounded-end", placeholder = "UserName" })
                                @Html.ValidationMessageFor(m => m.userName, "", new { @class = "text-danger" })
                            </div>
                                <div class="input-group mb-3">
                                    <span class="input-group-text bg-primary rounded-start">
                                        <i class="fa-solid fa-envelope" style="width: 15px; color:white; "></i>
                                    </span>
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg bg-light fs-6  rounded-end", placeholder = "Email Address" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>

                                <div class="input-group mb-3">
                                    <span class="input-group-text bg-primary rounded-start">
                                        <i class="fa-solid fa-lock" style="width: 15px; color:white; "></i>
                                    </span>

                                    @Html.PasswordFor(m => m.Password, new { @id = "passwordField", style = "z-index: 1;", @class = "form-control form-control-lg bg-light fs-6 rounded-end ", placeholder = "Password" })
                                    <span id="enrypassword" class="visually-hidden input-group-text border-0 position-absolute end-0 h-100 " style="z-index: 2; background-color: transparent ">
                                        <i class="fa fa-eye-slash" id="togglePassword"></i>
                                    </span>
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                                <div class="input-group mb-3 align-content-center">
                                    <span class="input-group-text bg-primary rounded-start">
                                        <i class="fa-solid fa-lock" style="width: 15px; color:white; "></i>
                                    </span>
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @id = "RepasswordField", style = "z-index: 1;", @class = "form-control form-control-lg bg-light fs-6 rounded-end", placeholder = "Repassword" })
                                    <span id="Reenrypassword" class="visually-hidden input-group-text border-0 position-absolute end-0 h-100" style="z-index:2; background-color: transparent">
                                        <i class="fa fa-eye-slash" id="RetogglePassword"></i>
                                    </span>
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>

                                <div class="d-grid col-12 mx-auto mb-4 mt-2 d-flex justify-content-center">
                                    <button class="btn btn-primary rounded-2 " type="submit"><span></span> Sign up</button>
                                </div>
                                <div class="row">
                                    <small>Do you have account? <a href="@Url.Action("Login", "Account")">Sign In</a></small>
                                </div>
                           
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</main>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    var eyeIcon = document.getElementById("togglePassword");
    document.getElementById("enrypassword").addEventListener("click", function () {
        var passwordField = document.getElementById("passwordField");
        if (passwordField.type === "password") {
            passwordField.type = "text";
            eyeIcon.classList.remove("fa-eye-slash");
            eyeIcon.classList.add("fa-eye");
        } else {
            passwordField.type = "password";
            eyeIcon.classList.remove("fa-eye");
            eyeIcon.classList.add("fa-eye-slash");
        }
    });

    var reeyeIcon = document.getElementById("RetogglePassword");
    document.getElementById("Reenrypassword").addEventListener("click", function () {
        var repasswordField = document.getElementById("RepasswordField");
        if (repasswordField.type === "password") {
            repasswordField.type = "text";
            reeyeIcon.classList.remove("fa-eye-slash");
            reeyeIcon.classList.add("fa-eye");
        } else {
            repasswordField.type = "password";
            reeyeIcon.classList.remove("fa-eye");
            reeyeIcon.classList.add("fa-eye-slash");
        }
    });

    document.getElementById("RepasswordField").addEventListener("click", function () {
        var span = document.getElementById("Reenrypassword");
        span.classList.remove("visually-hidden")
    });

    document.getElementById("passwordField").addEventListener("click", function () {
        var span = document.getElementById("enrypassword");
        span.classList.remove("visually-hidden")
    });

    const password = document.getElementById("passwordField");

    document.addEventListener("click", (e) => {
        if (!e.target.getElementById("passwordField")) {
            var span = document.getElementById("enrypassword");
            span.classList.add("visually-hidden")
        }
    })


    //document.getElementById("RepasswordField").addEventListener("blur", function () {
    //    var span = document.getElementById("Reenrypassword");
    //    span.classList.add("visually-hidden");
    //});

    //document.getElementById("passwordField").addEventListener("blur", function () {
    //    var span = document.getElementById("enrypassword");
    //    span.classList.add("visually-hidden")
    //});

   
</script>
