@model Website_Course_AVG.Areas.Admin.Data.ViewModels.AdminViewModels
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="app-body">
    <div id="form" class="card mb-3">
        @using (Html.BeginForm("Insert","Exercise",FormMethod.Post,new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="card-header">
                <h5 class="card-title">@ViewBag.Title</h5>
            </div>
            <div class="card-body">
                <div class="row gx-3">
                    <div class="col-xl-6 col-sm-6 col-12">
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="m-0">
                                    <label class="form-label">Title</label>
                                    <input type="text" name="Exercise.title" class="form-control" placeholder="Title" />
                                    @Html.ValidationMessageFor(m => m.Exercise.title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6 col-sm-6 col-12">
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="m-0">
                                    <label class="form-label">Content</label>
                                    <input type="text" name="Exercise.content" class="form-control" placeholder="Description" />
                                    @Html.ValidationMessageFor(m => m.Exercise.content, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6 col-sm-6 col-12">
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="m-0">
                                    <label class="form-label">Select Lesson </label>
                                    <select class="form-select" aria-label="Default select example" name="Exercise.lesson_id">
                                        <option selected="">Open this select menu</option>
                                        @foreach (var item in Model.Lessons)
                                        {
                                            <option value=@item.id>@item.title</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xl-6 col-sm-6 col-12">
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="mb-0">
                                    <label class="form-label">Upload File</label>
                                    <input name="file"  class="form-control" type="file" multiple/>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="d-flex gap-2 justify-content-end">
                    @*<button type="button" class="btn btn-outline-secondary">Cancel</button>*@
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            </div>
        }
    </div>
</div>
@section scripts
{
    <script>
        @*$(document).ready(function () {
            // Xử lý khi DOM đã tải xong
            var currentDate = new Date();

            // Thêm 30 ngày vào ngày hiện tại
            var expirationDate = new Date(currentDate);
            expirationDate.setDate(expirationDate.getDate() + 30);

            // Định dạng ngày thành chuỗi "YYYY-MM-DD"
            var formattedDate = expirationDate.toISOString().slice(0, 10);

            // Lấy giờ, phút và giây
            var hours = expirationDate.getHours();
            var minutes = expirationDate.getMinutes();
            var seconds = expirationDate.getSeconds();

            // Định dạng giờ, phút và giây để thêm vào chuỗi
            var formattedTime = ("0" + hours).slice(-2) + ":" + ("0" + minutes).slice(-2) + ":" + ("0" + seconds).slice(-2);

            // Đặt giá trị của trường nhập liệu là chuỗi ngày và giờ đã được định dạng
            $("#exerciseTime").val(formattedDate + " " + formattedTime);

            // Xử lý khi nút upload được click
            $("#uploadFileButton").click(function () {
                var formData = new FormData();
                var modelExercise = $("#uploadFileButton").val();
                var file = $("#uploadFileInput").get(0).files[0];
                formData.append("file", file);
                console.log(formData.get("file"));
                $.ajax({
                    url: '@Url.Action("Upload", "Exercise")',
                    type: 'POST',
                    data: {
                        file: formData,
                        model: modelExercise
                    },
                    processData: false,
                    contentType: false,
                    success: function () {
                        $("#fileName").val(file.name); // Sử dụng val() thay vì value để đặt giá trị của input
                        $("#linkGG").val('@ViewBag.Link'); // Sử dụng val() thay vì value để đặt giá trị của input
                        toastr.success("Upload file successfully");
                    },
                    error: function (xhr, status, error) {
                        toastr.error("Upload file failed");
                    }
                });
            });
        });*@
    </script>
}

