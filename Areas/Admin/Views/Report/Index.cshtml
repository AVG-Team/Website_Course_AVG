@using PagedList.Mvc
@model Website_Course_AVG.Areas.Admin.Data.ViewModels.AdminViewModels
@{
    ViewBag.Title = "Report";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="app-body">
    <div class="row gx-3">
        <div class="col-xxl-12">
            <div class="card mb-3">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered m-0">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Fullname</th>
                                    <th>Email</th>
                                    <th>Phone</th>
                                    <th>Subject</th>
                                    <th>Message</th>
                                    <th>Status</th>
                                    <th>Created</th>
                                    <th>Updated</th>
                                    <th>Deleted</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.ReportsPagedList)
                                {
                                    <tr class="srow" data-id="@item.id">
                                        <td class="item-row">@item.id</td>
                                        <td class="item-row">
                                            <span class="d-inline-block text-truncate" style="max-width: 150px;">
                                                @item.fullname
                                            </span>
                                        </td>
                                        <td class="item-row">
                                            <span class="d-inline-block text-truncate" style="max-width: 200px;">
                                                @item.email
                                            </span>
                                        </td>
                                        <td class="item-row">@item.phone</td>
                                        @*<td>
                                                <span class="badge border border-danger text-danger">Open</span>
                                            </td>*@
                                        <td class="item-row">@item.subject</td>
                                        <td class="item-row">@item.message</td>
                                        <td class="item-row">@item.status</td>
                                        @*<td>
                                                <span class="badge border border-success text-success">High</span>
                                            </td>*@
                                        <td class="text-success item-row">@item.created_at</td>
                                        <td class="text-warning item-row">@item.updated_at</td>
                                        <td class="text-danger item-row">@item.deleted_at</td>
                                        <td class="d-flex justify-content-center">
                                            <button class="btn btn-info btn-sm me-1 border rounded-3 btn-update" data-id="@item.id">
                                                <i class="bi bi-pencil"></i>
                                            </button>
                                            <button class="btn btn-danger btn-sm ms-1 border rounded-3 btn-delete" data-bs-toggle="modal" data-bs-target="#exampleModal">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
                 aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">
                                Confirm Remove Report
                            </h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            Are you sure you want to remove this report?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                Close
                            </button>
                            <button type="submit" class="btn btn-danger btn-submit-delete">
                                Submit
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer">
                <div>
                    Page @(Model.ReportsPagedList.PageCount < Model.ReportsPagedList.PageNumber ? 0 : Model.ReportsPagedList.PageNumber) of @Model.ReportsPagedList.PageCount
                </div>
                <div class="MenuPage">
                    @Html.PagedListPager(Model.ReportsPagedList, page => Url.Action("Index", new { page = page }))
                </div>
            </div>
        </div>
    </div>
</div>


<style>
    ul .pagination {
        justify-content: center;
    }

    .MenuPage {
        padding: 20px 0 10px 0;
    }

        .MenuPage li {
            display: inline;
        }
</style>

<style type="text/css">
    .MenuPage a {
        clear: both;
        color: black;
        padding: 4px 8px;
        text-decoration: none;
        background-color: #e8e8e8;
        border-radius: 5px;
        margin-left: 5px;
    }

        .MenuPage a:hover {
            background-color: darkcyan;
            border-radius: 5px;
            color: white;
        }

    a:not([href]):not([class]) {
        &, &:hover

    {
        background-color: dodgerblue;
        color: white;
    }

    }

    .btn-filter {
        background-color: #007bff;
        color: white;
        border-radius: 10px;
        border-color: transparent;
        height: 100%;
    }

        .btn-filter:hover {
            background-color: #0056b3;
            color: white;
        }

        .btn-filter .clicked {
            background-color: #0056b3;
            color: white;
        }

    .modal {
        top: 100%;
        transform: translateY(-100%);
    }
</style>

@section Scripts{
    <script>
        $(document).ready(function () {
            var idDelete;
            $('.btn-update').add('.item-row').click(function () {
                var id = $(this).closest('.srow').data('id')  // Sử dụng thuộc tính data-id để lấy giá trị id
                console.log(id);
                window.location.href = '/Admin/Report/Update?id=' + id;
            });

            $('.btn-delete').click(function () {
                idDelete = $(this).closest('.srow').data('id');
                console.log(idDelete);
            });
            $('.btn-submit-delete').click(function () {
                $.ajax({
                    url: '/Admin/Report/Delete',
                    type: 'POST', // Hoặc 'GET' tùy vào phương thức của action
                    data: { id: idDelete },
                    success: function (response) {
                        // Xử lý kết quả trả về nếu cần
                        console.log(response);
                        // Reload trang hoặc thực hiện các hành động khác sau khi xóa thành công
                        window.location.reload(); // Ví dụ: reload trang sau khi xóa thành công
                    },
                    error: function (xhr, status, error) {
                        // Xử lý lỗi nếu có
                        console.error(error);
                        // Hiển thị thông báo lỗi hoặc thực hiện các hành động khác nếu cần
                    }
                });
            });
        });
    </script>
}